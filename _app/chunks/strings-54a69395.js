const n={HOST:"text-split-host",TARGET:"text-split-target",MASK:"text-split-mask"};function T(t,{granularity:y="char",maskNodeInitCallback:u=null,targetNodeInitCallback:c=null}={}){const i=[],o=[];function f(l){l.style.position="relative",l.style.display="inline-block",l.style.transformStyle="preserve-3d"}function h(l){Array.from(l.childNodes).forEach(r=>{if(r instanceof HTMLElement)f(r),h(r);else if(r.nodeType===Node.TEXT_NODE){const p=[];r.textContent.split(/(\s)/).forEach(a=>{if(!!a)if(a===" ")p.push(document.createTextNode(" "));else{const s=document.createElement("span");f(s),s.style.whiteSpace="nowrap",s.setAttribute(n.MASK,""),o.push(s),u&&u(s,o.length);for(const m of a.split(y==="word"?" ":"")){const e=document.createElement("span");e.textContent=m,e.style.transformStyle="preserve-3d",e.style.position="relative",e.style.display="inline-block",e.setAttribute(n.TARGET,""),s.appendChild(e),i.push(e),c&&c(e,i.length)}p.push(s)}}),r.replaceWith(...p)}})}return t.hasAttribute(n.HOST)?(i.push(...Array.from(t.querySelectorAll(`[${n.TARGET}]`))),o.push(...Array.from(t.querySelectorAll(`[${n.MASK}]`)))):(t.setAttribute(n.HOST,""),t.normalize(),h(t)),{targets:i,masks:o}}const A=/px|%|em|vh|vw|rem/;function d(t){return typeof t=="number"?null:t.match(A)[0]||null}export{n as a,d as g,T as s};
